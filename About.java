/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SquareRoot;

import java.awt.Color;
import java.awt.Toolkit;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
    * Class       RepairGUI
    * File        RepairGUI.java 
    *Description  The about page. Contains general information, about the 
    *             program, and how the calculations are done. Also has copyright
    *             information along with a general warning and description
    *             of programs intended use. Is of utility type.
    *             
    * @author     Cameron Ufland
    * Environment 1.8.0_151; NetBeans 8.2
    * System      PC Windows 10
    * Date        February 12, 2018
    * @version    1.0
    * @see        javax.swing.JFrame
    * @see        java.text.NumberFormat
    * History log 02/08/2018, 02/10/2018, 02/13/2018 
    */
public class About extends javax.swing.JDialog 
{

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
    *<pre> 
    * Method          	About() 
    * Description      	creates the about page. Sets the icon, location and 
    *                   default button. 
    * member methods    initComponents()
    *                   getRootPane()
    *                   setDefaultButton()
    *                   setIconImage()
    *                   getContentPane()
    *                   getDefaultToolKit()
    *                   setLocationRelativeTo()
    * @param            parent java.awt.Frame
    * @param            modal boolean
    * @author         	Cameron Ufland 
    * Date             	02/12/2018 
    *</pre> 
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ **/
    public About(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.getRootPane().setDefaultButton(CloseJButton);
        setLocationRelativeTo(null);
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(
                "src/SquareRoot/square-root.jpg"));
        this.getContentPane().setBackground(Color.CYAN);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ImageJLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        AboutJTextArea = new javax.swing.JTextArea();
        CloseJButton = new javax.swing.JButton();
        CopyRightJLabel = new javax.swing.JLabel();
        WarningJLabel = new javax.swing.JLabel();
        TitleJLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 255));
        setType(java.awt.Window.Type.UTILITY);

        ImageJLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SquareRoot/square-root.jpg"))); // NOI18N

        AboutJTextArea.setEditable(false);
        AboutJTextArea.setColumns(20);
        AboutJTextArea.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        AboutJTextArea.setLineWrap(true);
        AboutJTextArea.setRows(5);
        AboutJTextArea.setText("This program allows the user to calculate the square root of a method based on two different methods. It also generates the square root based on the Math.sqrt method in Java to compare the two answers. \n\nTo use the program the user enters a number (that is greater than zero but less than One billion) for which they want to find the square root. They can then enter how accurate they would like that result to be using the given method. They can go from 0 to 15 decimal places. \n\nThe user selects a method and then presses the calculate button. At that point the program first calculates a seed value. This value represents a first guess to start calculations. \n\n\nThe seed value is calculated by first\ntaking the log base ten of the user provided number. That number is then divided by two and stored as an integer (a whole number) it is then multiplied by two to get an even number exponent. At that point the number is then divided by 10 raised to the even number exponent. This gets the base value which is compared to 10 if its greater or equal the seed value will be of the form 6*10^n power where n is the even number exponent previously calculated divided by 2. If that number is less than 10 then the seed value will take the form 2*10^n where n is the is the even number exponent previously calculated divided by 2.\n\nOnce the seed value is calculated the program then calculates the square root based on the method specified by the user. \n\nFor the Newton Method the following formula is used\n\nx1 = ( x0 + ( numbe r/ x0 ) ) / 2\n\nwhere\nx1= the next guess to be compared to the actual square root\nx0= the previous guess \nnumber = the user inputted number\n\nthis process is repeated with x1 becoming x0 and a new guess being calculated in later iterations, until x1 is suitably close to the actual square root.\n\nFor the Bakhshali method  the following formulas are used\n\naN = ( number- x0^2)/ ( 2 * x0)\nbN = x0 + aN\nx1 = bN - ( aN^2 / ( 2x0 + aN))\n\nwhere aN= represents a first guess\nbN = the original guess plus this first guess\nx1 represents the final guess to be compared to the actual square root. \nThis method essentially has two guesses built into one iteration.\nThis process repeats until it is suitably close to the actual square root, it repeats at least five times.\n\nThe program then uses the estimated value to calcule an error which is as follows\n|actual-estimate|/actual * 100\n\nactual = the actual square root of the number\nestimate = the square root calculated based on the chosen method\nit then outputs as a percentage. \nThe number of iterations that needed to be conducted to get suitably close to the actual square root appear below the error.\n\nhttps://en.wikipedia.org/wiki/Methods_of_computing_square_roots\nThis program is for educational purposes only. \n\n");
        AboutJTextArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(AboutJTextArea);

        CloseJButton.setText("Close");
        CloseJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CloseJButtonActionPerformed(evt);
            }
        });

        CopyRightJLabel.setText("(c) Cameron Ufland 2018");

        WarningJLabel.setText("Educational Purposes Only ");

        TitleJLabel.setBackground(new java.awt.Color(0, 255, 255));
        TitleJLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        TitleJLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleJLabel.setText("The Square Root Machine");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(WarningJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(CopyRightJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(155, 155, 155)
                        .addComponent(CloseJButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ImageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(TitleJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ImageJLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TitleJLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(WarningJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CopyRightJLabel))
                    .addComponent(CloseJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
    *<pre> 
    * Method          	CloseJButtonActionPerformed() 
    * Description      	closes the about page returning the user to the 
    *                   Repair GUI Form
    * member methods    dispose()
    *                   
    * @author         	Cameron Ufland 
    * Date             	02/12/2018 
    *</pre> 
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    private void CloseJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CloseJButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_CloseJButtonActionPerformed

     /**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
    *<pre> 
    * Method          	main() 
    * Description      	Generates a new instance of the about form.
    * @param            args[] String                  
    * @author         	Cameron Ufland 
    * Date             	02/12/2018 
    *</pre> 
    *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(About.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                About dialog = new About(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AboutJTextArea;
    private javax.swing.JButton CloseJButton;
    private javax.swing.JLabel CopyRightJLabel;
    private javax.swing.JLabel ImageJLabel;
    private javax.swing.JLabel TitleJLabel;
    private javax.swing.JLabel WarningJLabel;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
